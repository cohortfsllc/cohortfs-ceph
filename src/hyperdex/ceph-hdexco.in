#!/bin/sh

this=`basename $0`
cmd="@HYPERDEX_BINDIR@/hyperdex-coordinator"
ctrl="@HYPERDEX_BINDIR@/hyperdex-coordinator-control"
startstop="/sbin/start-stop-daemon"

BINDIR=@bindir@
LIBDIR=@libdir@/ceph
ETCDIR=@sysconfdir@/ceph
verbose=1

do_shutdown() {
  local pidfile
  pidfile=$1
  date >> /tmp/co-log
  echo $pidfile >> /tmp/co-log
  cat $pidfile >> /tmp/co-log
  $ctrl quiesce 2>&1 >> /tmp/co-log
  $ctrl shutdown 2>&1 >> /tmp/co-log
  sleep 2
  $startstop --pidfile=$pidfile --stop
  exit 0
}

help() {
    echo "Usage: $this:"
    echo "  -i=id                        identifier of instance"
    echo "  --pidfile=path               path to file containing process id"
    $cmd --help | grep -vi "^Usage"
}

usage() {
    echo "Usage: $this:"
    echo "        [-i=id] [--pid-file=path]"
    $cmd --usage | grep -v "^Usage"
}

args=`getopt --name "$this" --unquote \
      -l subprocess,pid-file:,help,control-port:,host-port:,logging:,state-file: \
      -o i:hb:c:p:l:s: \
      -- $@`

if [ $? != 0 ] ; then
  help()
  exit 1
fi

set -- $args

while [ $# -gt 0 ] ; do
    case "$1" in
	--subprocess )
	    SUBPROCESS=true ;;
	-c )
	    CONFIG="$2" ; CONFIGFILE="-c $2" ; shift ;;
	--pid-file )
	    PIDFILE="$2" ; CTRLPIDFILE="$2.ctrl" ; shift ;;
	-i )
	    ID="$2" ; shift ;;
	--help | -h )
	    help ; exit 0 ;;
	-b | --bindto )
	    OPTBINDTO="--bindto=$2" ; shift ;;
	--control-port )
	    OPTCONTROLPORT="--control-port=$2" ; shift ;;
	-p | --host-port )
	    OPTHOSTPORT="--host-port=$2" ; shift ;;
	-l | --logging )
	    OPTLOGGING="--logging=$2" ; shift ;;
	-s | --state-file )
	    OPTSTATEFILE="--state-file=$2" ; shift ;;
	-- )
	    shift ; break ;;
	\? )
	    usage ; echo Error: $1 ; exit 1 ;;
	* )
	    usage ; echo Error: illegal argument $1 ; exit 1 ;;
    esac
    shift
done

if [ $# -gt 0 ] ;then
    echo Error: extra arguments -- $*
    echo $USAGE;
    exit 1
fi

if [ -z "$SUBPROCESS" -a -z "$PIDFILE" ] ;then
    echo Error: must supply --pidfile when not a subprocess
    exit 1
fi

if [ -z "$SUBPROCESS" ] ;then
    $startstop --pidfile=$PIDFILE --make-pidfile --background \
	--startas $0 --start -- --subprocess $OPTBINDTO $OPTCONTROLPORT $OPTHOSTPORT \
	$OPTLOGGING $OPTSTATEFILE --pid-file=$PIDFILE $CONFIGFILE -i $ID
else
    type=hdexco
    id=$ID
    . $LIBDIR/ceph_common.sh
    if [ -n "$CONFIG" ] ;then
	conf="$CONFIG"
    fi
    verify_conf

    echo "point a" >> /tmp/command
    config_option OPTBINDTO "--bind-to" "" "bind-to"
    echo "point b" >> /tmp/command
    config_option OPTCONTROLPORT "--control-port" "" "ctrl port"
    config_option OPTHOSTPORT "--host-port" "" "host port"
    config_option OPTLOGGING "--logging" "" "logging"
    config_option OPTSTATEFILE "--state-file" "" "state file"
    echo "point c" >> /tmp/command
p
    trap "do_shutdown $CTRLPIDFILE" TERM

    $startstop --pidfile=$CTRLPIDFILE --make-pidfile --background --startas $cmd --start -- $OPTBINDTO $OPTCONTROLPORT $OPTHOSTPORT $OPTLOGGING $OPTSTATEFILE
    while true ; do
	sleep 5
    done
fi > /tmp/out 2> /tmp/err
